/* eslint-disable */
import * as types from './graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

/**
 * Map of all GraphQL operations in the project.
 *
 * This map has several performance disadvantages:
 * 1. It is not tree-shakeable, so it will include all operations in the project.
 * 2. It is not minifiable, so the string of a GraphQL query will be multiple times inside the bundle.
 * 3. It does not support dead code elimination, so it will add unused operations.
 *
 * Therefore it is highly recommended to use the babel or swc plugin for production.
 */
const documents = {
    "\n    query contentTypeQuery($baseUrl: String!, $route: String!, $culture: String, $includePreview: Boolean!) {\n        contentByRoute(\n            baseUrl: $baseUrl\n            route: $route\n            inContext: { culture: $culture, includePreview: $includePreview }\n        ) {\n            name\n            url(urlMode: ABSOLUTE)\n            properties {\n                __typename\n            }\n            children {\n                name\n                url(urlMode: RELATIVE)\n            }\n        }\n    }\n": types.ContentTypeQueryDocument,
    "\n    query homePagePropertiesQuery($baseUrl: String!, $route: String!, $culture: String, $includePreview: Boolean!) {\n        contentByRoute(\n            baseUrl: $baseUrl\n            route: $route\n            inContext: { culture: $culture, includePreview: $includePreview }\n        ) {\n            properties {\n                ... on IHome {\n                    mainImage {\n                        mediaItems {\n                            url(urlMode: ABSOLUTE)\n                        }\n                    }\n                    title {\n                        value\n                    }\n                    subtitle {\n                        value\n                    }\n                    socialIconLinks {\n                        ...SocialIconLinks\n                    }\n                    contentRows {\n                        ...ContentRows\n                    }\n                    metaName {\n                        value\n                    }\n                    metaDescription {\n                        value\n                    }\n                    metaKeywords {\n                        value\n                    }\n                }\n                __typename\n            }\n        }\n    }\n\n    fragment SocialIconLinks on BlockList {\n        blocks {\n            contentProperties {\n                ... on IIconLinkRow {\n                    icon {\n                        mediaItems {\n                            url(urlMode: ABSOLUTE)\n                        }\n                    }\n                    link {\n                        links {\n                            url(urlMode: RELATIVE)\n                            target\n                            name\n                            type\n                        }\n                    }\n                }\n                __typename\n            }\n            settingsProperties {\n                ... on IHideProperty {\n                    hide {\n                        value\n                    }\n                }\n                __typename\n            }\n        }\n    }\n\n    fragment ContentRows on BlockList {\n        blocks {\n            contentProperties {\n                ... on IRichTextRow {\n                    content {\n                        value\n                    }\n                }\n                ... on IImageRow {\n                    image {\n                        mediaItems {\n                            url(urlMode: ABSOLUTE)\n                        }\n                    }\n                    caption {\n                        value\n                    }\n                }\n                ... on IVideoRow {\n                    videoUrl {\n                        value\n                    }\n                    caption {\n                        value\n                    }\n                }\n                ... on ICodeSnippetRow {\n                    title {\n                        value\n                    }\n                    code {\n                        value\n                    }\n                }\n                ... on ImageCarouselRow {\n                    images {\n                        mediaItems {\n                            url(urlMode: ABSOLUTE)\n                        }\n                    }\n                }\n                ... on LatestArticlesRow {\n                    articleList {\n                        items {\n                            url(urlMode: ABSOLUTE)\n                            name\n                        }\n                    }\n                }\n                __typename\n            }\n            settingsProperties {\n                ... on ISpacingProperties {\n                    paddingTop {\n                        value\n                    }\n                    paddingBottom {\n                        value\n                    }\n                    paddingLeft {\n                        value\n                    }\n                    paddingRight {\n                        value\n                    }\n                    marginTop {\n                        value\n                    }\n                    marginBottom {\n                        value\n                    }\n                    marginLeft {\n                        value\n                    }\n                    marginRight {\n                        value\n                    }\n                }\n                ... on IHideProperty {\n                    hide {\n                        value\n                    }\n                }\n                __typename\n            }\n        }\n    }\n": types.HomePagePropertiesQueryDocument,
    "\n    mutation createToken($scope: Any) {\n        createToken(claims: [{ name: \"headless-scope\", value: $scope }]) {\n            expires\n            header\n            prefix\n            token\n        }\n    }\n": types.CreateTokenDocument,
};

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 *
 *
 * @example
 * ```ts
 * const query = graphql(`query GetUser($id: ID!) { user(id: $id) { name } }`);
 * ```
 *
 * The query argument is unknown!
 * Please regenerate the types.
 */
export function graphql(source: string): unknown;

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n    query contentTypeQuery($baseUrl: String!, $route: String!, $culture: String, $includePreview: Boolean!) {\n        contentByRoute(\n            baseUrl: $baseUrl\n            route: $route\n            inContext: { culture: $culture, includePreview: $includePreview }\n        ) {\n            name\n            url(urlMode: ABSOLUTE)\n            properties {\n                __typename\n            }\n            children {\n                name\n                url(urlMode: RELATIVE)\n            }\n        }\n    }\n"): (typeof documents)["\n    query contentTypeQuery($baseUrl: String!, $route: String!, $culture: String, $includePreview: Boolean!) {\n        contentByRoute(\n            baseUrl: $baseUrl\n            route: $route\n            inContext: { culture: $culture, includePreview: $includePreview }\n        ) {\n            name\n            url(urlMode: ABSOLUTE)\n            properties {\n                __typename\n            }\n            children {\n                name\n                url(urlMode: RELATIVE)\n            }\n        }\n    }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n    query homePagePropertiesQuery($baseUrl: String!, $route: String!, $culture: String, $includePreview: Boolean!) {\n        contentByRoute(\n            baseUrl: $baseUrl\n            route: $route\n            inContext: { culture: $culture, includePreview: $includePreview }\n        ) {\n            properties {\n                ... on IHome {\n                    mainImage {\n                        mediaItems {\n                            url(urlMode: ABSOLUTE)\n                        }\n                    }\n                    title {\n                        value\n                    }\n                    subtitle {\n                        value\n                    }\n                    socialIconLinks {\n                        ...SocialIconLinks\n                    }\n                    contentRows {\n                        ...ContentRows\n                    }\n                    metaName {\n                        value\n                    }\n                    metaDescription {\n                        value\n                    }\n                    metaKeywords {\n                        value\n                    }\n                }\n                __typename\n            }\n        }\n    }\n\n    fragment SocialIconLinks on BlockList {\n        blocks {\n            contentProperties {\n                ... on IIconLinkRow {\n                    icon {\n                        mediaItems {\n                            url(urlMode: ABSOLUTE)\n                        }\n                    }\n                    link {\n                        links {\n                            url(urlMode: RELATIVE)\n                            target\n                            name\n                            type\n                        }\n                    }\n                }\n                __typename\n            }\n            settingsProperties {\n                ... on IHideProperty {\n                    hide {\n                        value\n                    }\n                }\n                __typename\n            }\n        }\n    }\n\n    fragment ContentRows on BlockList {\n        blocks {\n            contentProperties {\n                ... on IRichTextRow {\n                    content {\n                        value\n                    }\n                }\n                ... on IImageRow {\n                    image {\n                        mediaItems {\n                            url(urlMode: ABSOLUTE)\n                        }\n                    }\n                    caption {\n                        value\n                    }\n                }\n                ... on IVideoRow {\n                    videoUrl {\n                        value\n                    }\n                    caption {\n                        value\n                    }\n                }\n                ... on ICodeSnippetRow {\n                    title {\n                        value\n                    }\n                    code {\n                        value\n                    }\n                }\n                ... on ImageCarouselRow {\n                    images {\n                        mediaItems {\n                            url(urlMode: ABSOLUTE)\n                        }\n                    }\n                }\n                ... on LatestArticlesRow {\n                    articleList {\n                        items {\n                            url(urlMode: ABSOLUTE)\n                            name\n                        }\n                    }\n                }\n                __typename\n            }\n            settingsProperties {\n                ... on ISpacingProperties {\n                    paddingTop {\n                        value\n                    }\n                    paddingBottom {\n                        value\n                    }\n                    paddingLeft {\n                        value\n                    }\n                    paddingRight {\n                        value\n                    }\n                    marginTop {\n                        value\n                    }\n                    marginBottom {\n                        value\n                    }\n                    marginLeft {\n                        value\n                    }\n                    marginRight {\n                        value\n                    }\n                }\n                ... on IHideProperty {\n                    hide {\n                        value\n                    }\n                }\n                __typename\n            }\n        }\n    }\n"): (typeof documents)["\n    query homePagePropertiesQuery($baseUrl: String!, $route: String!, $culture: String, $includePreview: Boolean!) {\n        contentByRoute(\n            baseUrl: $baseUrl\n            route: $route\n            inContext: { culture: $culture, includePreview: $includePreview }\n        ) {\n            properties {\n                ... on IHome {\n                    mainImage {\n                        mediaItems {\n                            url(urlMode: ABSOLUTE)\n                        }\n                    }\n                    title {\n                        value\n                    }\n                    subtitle {\n                        value\n                    }\n                    socialIconLinks {\n                        ...SocialIconLinks\n                    }\n                    contentRows {\n                        ...ContentRows\n                    }\n                    metaName {\n                        value\n                    }\n                    metaDescription {\n                        value\n                    }\n                    metaKeywords {\n                        value\n                    }\n                }\n                __typename\n            }\n        }\n    }\n\n    fragment SocialIconLinks on BlockList {\n        blocks {\n            contentProperties {\n                ... on IIconLinkRow {\n                    icon {\n                        mediaItems {\n                            url(urlMode: ABSOLUTE)\n                        }\n                    }\n                    link {\n                        links {\n                            url(urlMode: RELATIVE)\n                            target\n                            name\n                            type\n                        }\n                    }\n                }\n                __typename\n            }\n            settingsProperties {\n                ... on IHideProperty {\n                    hide {\n                        value\n                    }\n                }\n                __typename\n            }\n        }\n    }\n\n    fragment ContentRows on BlockList {\n        blocks {\n            contentProperties {\n                ... on IRichTextRow {\n                    content {\n                        value\n                    }\n                }\n                ... on IImageRow {\n                    image {\n                        mediaItems {\n                            url(urlMode: ABSOLUTE)\n                        }\n                    }\n                    caption {\n                        value\n                    }\n                }\n                ... on IVideoRow {\n                    videoUrl {\n                        value\n                    }\n                    caption {\n                        value\n                    }\n                }\n                ... on ICodeSnippetRow {\n                    title {\n                        value\n                    }\n                    code {\n                        value\n                    }\n                }\n                ... on ImageCarouselRow {\n                    images {\n                        mediaItems {\n                            url(urlMode: ABSOLUTE)\n                        }\n                    }\n                }\n                ... on LatestArticlesRow {\n                    articleList {\n                        items {\n                            url(urlMode: ABSOLUTE)\n                            name\n                        }\n                    }\n                }\n                __typename\n            }\n            settingsProperties {\n                ... on ISpacingProperties {\n                    paddingTop {\n                        value\n                    }\n                    paddingBottom {\n                        value\n                    }\n                    paddingLeft {\n                        value\n                    }\n                    paddingRight {\n                        value\n                    }\n                    marginTop {\n                        value\n                    }\n                    marginBottom {\n                        value\n                    }\n                    marginLeft {\n                        value\n                    }\n                    marginRight {\n                        value\n                    }\n                }\n                ... on IHideProperty {\n                    hide {\n                        value\n                    }\n                }\n                __typename\n            }\n        }\n    }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n    mutation createToken($scope: Any) {\n        createToken(claims: [{ name: \"headless-scope\", value: $scope }]) {\n            expires\n            header\n            prefix\n            token\n        }\n    }\n"): (typeof documents)["\n    mutation createToken($scope: Any) {\n        createToken(claims: [{ name: \"headless-scope\", value: $scope }]) {\n            expires\n            header\n            prefix\n            token\n        }\n    }\n"];

export function graphql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;